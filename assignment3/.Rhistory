summary(cars)
plot(cars)
library(knitr)
kable(mtcars[1:5,],caption="A knit kable.")
x=rep(c("A","B"),each=5); x
sample(x)
rbinom(10,1,0.5)
rbinom(10,1,0.5)
rbinom(5,1,0.8)
x=rnorm(100)
x=rep(c("A","B"),each=5); x
sample(x)
rbinom(10,1,0.5)
rbinom(10,1,0.5)
rbinom(5,1,0.8)
x=rnorm(100)
par(mfrow=c(1,2))
x1=rnorm(50); hist(x1); qqnorm(x1)
x2=rnorm(50,1,2); hist(x2); qqnorm(x2)
plot(iris$Sepal.Length,iris$Petal.Length,xlab="Sepal.Length",ylab="Petal.Length")
mu=0.2
x=rnorm(100,mu,1) # creating artificial data
t.test(x,mean=0)   # t.test(x,alternative=c("two.sided"),conf.level=0.95,mu=10)
mu=0;nu=0.5
x=rnorm(50,mu,1); y=rnorm(50,nu,1) # creating artificial data
ttest=t.test(x,y)
par(mfrow=c(1,2))
load(file="assign1.RData")
x=rnorm(20)
hist(x)
qqnorm(x)
par(mfrow=c(5,2))
hist(x1)
load(file="assign1.RData")
par(mfrow=c(5,2))
hist(x1)
qqnorm(x1)
hist(x2)
qqnorm(x2)
par(mfrow=c(5,2))
hist(x1)
par(mfrow=c(3,2))
hist(x1)
qqnorm(x1)
# x1 normal distribution?: yes
hist(x2)
qqnorm(x2)
# x2 normal distribution?: no
hist(x3)
qqnorm(x3)
# x3 normal distribution?: yes
par(mfrow=c(2,2))
hist(x4)
qqnorm(x4)
# x4 normal distribution?: yes
hist(x5)
qqnorm(x5)
# x5 normal distribution?: no
hist(x1)
qqnorm(x1)
# x1 normal distribution?: yes
hist(x2)
qqnorm(x2)
# x2 normal distribution?: no
hist(x3)
qqnorm(x3)
# x3 normal distribution?: yes
hist(x4)
qqnorm(x4)
# x4 normal distribution?: yes
hist(x5)
qqnorm(x5)
# x5 normal distribution?: no
par(mfrow=c(1,2))
load(file="assign1.RData")
x=rnorm(20)
hist(x)
qqnorm(x)
par(mfrow=c(1,2))
hist(x1)
qqnorm(x1)
hist(x2)
qqnorm(x2)
hist(x3)
qqnorm(x3)
hist(x4)
qqnorm(x4)
hist(x5)
qqnorm(x5)
par(mfrow=c(1,2))
calculatePvalues <- function(m,n,mu,nu,sd,B){
p=numeric(B)
for (b in 1:B) {
x=rnorm(m,mu,sd)
y=rnorm(n,nu,sd)
p[b]=t.test(x,y,var.equal=TRUE)[[3]]
}
return(p)
}
mu=nu=180; m=n=30; sd=10; B=1000
p=calculatePvalues(m,n,mu,nu,sd,B)
# number of pvalues smaller than 5% (49)
length(p[p<0.05])
# number of pvalues smaller than 10% (98)
length(p[p<0.1])
# distribution of p-values: uniform distribution
hist(p)
qqnorm(p)
mu=nu=180; m=n=30; sd=1; B=1000
p=calculatePvalues(m,n,mu,nu,sd,B)
# number of pvalues smaller than 5% (51)
length(p[p<0.05])
# number of pvalues smaller than 10% (104)
length(p[p<0.1])
# distribution of p-values: uniform distribution
hist(p)
qqnorm(p)
mu=180; nu=175; m=n=30; sd=6; B=1000
p=calculatePvalues(m,n,mu,nu,sd,B)
# number of pvalues smaller than 5% (903)
length(p[p<0.05])
# number of pvalues smaller than 10% (943)
length(p[p<0.1])
# distribution of p-values: uniform distribution
hist(p)
qqnorm(p)
par(mfrow=c(1,1))
calculatePvaluesNus <- function(m,n,mu,nus,sd,B){
powers=numeric(length(nus))
for (i in 1:length(nus)) {
nu=nus[i]
p=calculatePvalues(m,n,mu,nu,sd,B)
powers[i]=mean(p<0.05)
}
return(powers)
}
mu=180; m=n=30; sd=5; B=1000
nus=seq(175,185,by=0.1)
powers1=calculatePvaluesNus(m,n,mu,nus,sd,B)
plot(nus, powers1)
mu=180; m=n=100; sd=5; B=1000
nus=seq(175,185,by=0.1)
powers2=calculatePvaluesNus(m,n,mu,nus,sd,B)
plot(nus, powers2)
mu=180; m=n=30; sd=100; B=1000
nus=seq(175,185,by=0.1)
powers3=calculatePvaluesNus(m,n,mu,nus,sd,B)
plot(nus, powers3)
par(mfrow=c(1,2))
plot(nus, powers1)
plot(nus, powers2)
par(mfrow=c(1,1))
plot(nus, powers3)
setwd("C:/Users/Martin/Desktop/AI Master Ams/1.3/Experimental Design and Data Analysis/assignments/assignment 2 and 3/git/EDDA/assignment2")
telephone=read.table("telephone.txt",header=TRUE)
# exponential distribution of 200 elements
exp_d = rexp(20000, rate=0.035)
exp_d_median = median(exp_d)
wilcox.test(telephone[,"Bills"], mu = exp_d_median)
# Rejected, median is not close to exponential median
par(mfrow=c(1,2))
hist(telephone[,"Bills"])
qqnorm(telephone[,"Bills"])
hist(exp_d)
qqnorm(exp_d)
par(mfrow=c(1,2))
hist(telephone[,"Bills"])
qqnorm(telephone[,"Bills"])
hist(telephone[,"Bills"])
par(mfrow=c(1,2))
hist(telephone[,"Bills"])
qqnorm(telephone[,"Bills"])
par(mfrow=c(1,1))
boxplot(telephone[,"Bills"])
par(mfrow=c(1,3))
hist(telephone[,"Bills"])
qqnorm(telephone[,"Bills"])
boxplot(telephone[,"Bills"])
par(mfrow=c(1,3))
hist(telephone[,"Bills"]/sum(telephone[,"Bills"]))
qqnorm(telephone[,"Bills"])
boxplot(telephone[,"Bills"])
telephone[,"Bills"]
telephone[,"Bills"]/sum(telephone[,"Bills"])
par(mfrow=c(1,3))
hist(telephone[,"Bills"])
qqnorm(telephone[,"Bills"])
boxplot(telephone[,"Bills"])
sum(telephone[,"Bills"])
light1 = scan("light1879.txt")
light2 = scan("light1882.txt")
light3 = scan("light.txt")
# first, we should have all 3 datasets with the same criteria.
# We will use 1879/82 criteria (km/s - 299000).
# Therefore we have to transform light3 into km/s and substract 299000:
# We know light3 measure is microseconds to perform 7442 km,
# with 24.8 milliseconds substracted.
# NOTE: I think the assignment clearly means milliseconds when talking
# about Newcomb measurements. After multiplying by 1000 you do get microsecs.
light3 = (light3/1000)+24.8 # milliseconds
light3 = (light3/1000) # seconds to perform 7442 km
light3 = (7442/light3) # in 1 second it will perform x km
light3 = light3 - 299000 # final 1879/82 criteria
par(mfrow=c(1,3))
hist(light1)
hist(light2)
hist(light3)
par(mfrow=c(1,1))
boxplot(light1, light2, light3)
par(mfrow=c(1,3))
hist(light1)
hist(light2)
hist(light3)
t.test(light1)$conf.int
t.test(light2)$conf.int
t.test(light3)$conf.int
t.test(light1+ 299000)$conf.int
t.test(light2+ 299000)$conf.int
t.test(light3+ 299000)$conf.int
klm = scan("klm.txt")
# First, we check distribution of the data.
# Assuming maximum delivery duration of this parts is 70,
# we remove outliers (parts that are more than 70 days)
klm <- klm[klm<71]
hist(klm)
qqnorm(klm)
par(mfrow=c(1,2))
hist(klm)
qqnorm(klm)
wilcox.test(klm,mu=32)
wilcox.test(klm,mu=32)[[1]]
wilcox.test(klm,mu=32)[[3]]
wilcox.test(klm,mu=30)[[3]]
par(mfrow=c(1,2))
clouds=read.table("clouds.txt",header=TRUE)
clouds_diff = clouds[,1]-clouds[,2]
hist(clouds_diff)
qqnorm(clouds_diff)
clouds=read.table("clouds.txt",header=TRUE)
clouds_diff = clouds[,1]-clouds[,2]
hist(clouds_diff)
qqnorm(clouds_diff)
par(mfrow=c(1,2))
clouds=read.table("clouds.txt",header=TRUE)
clouds_diff = clouds[,1]-clouds[,2]
hist(clouds_diff)
qqnorm(clouds_diff)
ks.test(clouds[,1],clouds[,2])
setwd("C:/Users/Martin/Desktop/AI Master Ams/1.3/Experimental Design and Data Analysis/assignments/assignment 2 and 3/git/EDDA/assignment3")
peruvians=read.table("peruvians.txt",header=TRUE)
head(peruvians)
head(peruvians[,-c(5,6,7)])
peruvians <- peruvians[,-c(5,6,7)]
head(peruvians)
pairs(peruvians[,1], peruvians[,2])
pairs(migrationÃ£ge, data=peruvians)
pairs(migration~age, data=peruvians)
abline
abline(0,1)
abline(0,0)
abline(1,1)
abline(0,1)
head(peruvians)
pairs(migration~age, data=peruvians)
pairs(migration~weight, data=peruvians)
pairs(migration~length, data=peruvians)
pairs(migration~wrist, data=peruvians)
pairs(migration~systolic, data=peruvians)
pairs(migration~diastolic, data=peruvians)
attach(peruvians)
cor.test(migration, age, method="spearman")
cor.test(migration, weight, method="spearman")
cor.test(migration, length, method="spearman")
cor.test(migration, wrist, method="spearman")
cor.test(migration, systolic, method="spearman")
cor.test(migration, diastolic, method="spearman")
cor.test(migration, diastolic, method="spearman")
